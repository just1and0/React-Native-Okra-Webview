{"version":3,"sources":["types.ts"],"names":["product"],"mappings":"AAAA,IAAIA,OAAJ","sourcesContent":["let product: string[];\n\nexport interface OkraBuildWithOptionsProps {\n  name: string;\n  env: string;\n  app_id?: string;\n  okraKey: string;\n  token: string;\n  products: typeof product;\n  exp?:Date;\n  currency?:string;\n  callback_url?:string;\n  widget_failed?:string;\n  widget_success?:string;\n  connectMessage?:string;\n  isCorporate?:boolean;\n  filter?:any[];\n  limit?:number;\n  color?:string;\n  logo?:string;\n  charge?:string[];\n  payment?:boolean\n  onSuccess: (e: any) => void;\n  onClose: (e: any) => void;\n  BeforeClose?: () => void;\n  onError?: (e:any) => void;\n\n}\n\nexport interface OkraBuildWithShortUrlProps {\n  short_url: string;\n  onSuccess: (e: any) => void;\n  onClose: (e: any) => void;\n  BeforeClose?: () => void;\n  onError?: (e:any) => void;\n}\n\nexport interface ShortUrlWebViewConfigProps {\n  short_url: string;\n}\n\nexport interface OptionWebViewConfigProps {\n  name: string;\n  env: string;\n  app_id?: string;\n  okraKey: string;\n  token: string;\n  products: typeof product;\n  exp?:Date;\n  currency?:string;\n  callback_url?:string;\n  widget_failed?:string;\n  widget_success?:string;\n  connectMessage?:string;\n  isCorporate?:boolean;\n  filter?:any[];\n  limit?:number;\n  color?:string;\n  logo?:string;\n  charge?:chargeProps;\n  payment?:boolean\n}\n\ninterface chargeProps {\n    type:type;\n    amount:number | null;\n    note?:string;\n    currency?:string;\n    account:string;\n}\n\ntype type = 'one-time' | 'recurring';"]}